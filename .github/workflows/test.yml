name: Test and Build

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Install Helios CLI (Development Binary)
      run: |
        # For CI testing, we'll use the local helios-cli binary if available
        # In production, this would install from a proper release
        if [ -f "./bin/helios-cli" ]; then
          chmod +x ./bin/helios-cli
          echo "Using local helios-cli binary for testing"
        else
          echo "No helios-cli binary found - benchmarks will skip Helios integration"
        fi
        
    - name: Install Firecracker (Optional for Full Integration Tests)
      run: |
        # Install Firecracker for integration tests
        # This is optional - tests will skip if not available
        curl -LOJ https://github.com/firecracker-microvm/firecracker/releases/download/v1.4.1/firecracker-v1.4.1-x86_64.tgz
        tar -xzf firecracker-v1.4.1-x86_64.tgz
        sudo mv release-v1.4.1-x86_64/firecracker-v1.4.1-x86_64 /usr/local/bin/firecracker
        sudo chmod +x /usr/local/bin/firecracker
        echo "Firecracker installed for integration testing"
      continue-on-error: true
        
    - name: Download dependencies
      run: go mod download
      
    - name: Run tests
      run: go test -v ./...
      env:
        HELIOS_CLI_PATH: "./bin/helios-cli"
        # Skip long-running integration tests in CI
        SHORT_TESTS: "true"
        
    - name: Run benchmarks (with simulation indicators)
      run: |
        echo "Running benchmarks - Note: Some measurements are simulated for development"
        go test -bench=. -benchmem ./core/sandbox/... || echo "Some benchmarks skipped due to missing dependencies"
      env:
        HELIOS_CLI_PATH: "./bin/helios-cli"
        SHORT_TESTS: "true"
        
    - name: Run race detector
      run: go test -race -short ./...
      
    - name: Check Go formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Go files must be formatted with gofmt:"
          gofmt -s -l .
          exit 1
        fi
        
    - name: Run go vet
      run: go vet ./...
      
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=3m

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Build application
      run: |
        go build -v ./...
        
    - name: Build with race detection
      run: |
        go build -race -v ./...